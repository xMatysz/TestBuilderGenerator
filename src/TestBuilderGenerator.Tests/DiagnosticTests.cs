namespace TestBuilderGenerator.Tests;

public class DiagnosticTests
{
    private readonly (string fileName, string content) _attributeGeneratedCode = (
        "TestBuilderGenOfAttribute.g.cs",
        """
        // <auto-generated/>
        // lang=c#

        #nullable enable

        namespace TestBuilderGenerator;

        [global::System.CodeDom.Compiler.GeneratedCode("TestBuilderGenerator", "1.0.0.0")]
        [global::System.AttributeUsage(global::System.AttributeTargets.Class, AllowMultiple = true)]
        internal sealed class TestBuilderGenOfAttribute<T> : global::System.Attribute
        {
        }

        // </auto-generated/>
        """);

    [Fact]
    public async Task Error_When_Builder_Is_Not_Partial()
    {
        const string code =
            """
            using TestBuilderGenerator;

            namespace Entities;

            public class Entity
            {
            }

            [TestBuilderGenOf<Entity>]
            public class EntityBuilder {}
            """;

        var expectedDiagnostic = DiagnosticResult
            .CompilerError("SG0001")
            .WithSpan(10, 14, 10, 28);

        await VerifyCS.ValidateSourceGeneratorAsync(
            [code],
            [_attributeGeneratedCode],
            [expectedDiagnostic]);
    }

    [Fact]
    public async Task Error_When_Builder_Not_Implement_Build()
    {
        const string code =
            """
            using TestBuilderGenerator;

            namespace Entities;

            public class Entity
            {
            }

            [TestBuilderGenOf<Entity>]
            public partial class EntityBuilder {}
            """;

        (string fileName, string content) generatedCode = (
            "EntityBuilder.g.cs",
            """
            // <auto-generated/>
            // lang=c#
            #nullable enable
            #pragma warning disable CA5394
            namespace Entities;

            public partial class EntityBuilder
            {
                public static EntityBuilder Default => new EntityBuilder();
                public partial Entities.Entity Build();
            }

            // </auto-generated>
            """);

        var expectedDiagnostic = DiagnosticResult
            .CompilerError("CS8795")
            .WithSpan("TestBuilderGenerator/TestBuilderGenerator.Generator/EntityBuilder.g.cs", 10, 36, 10, 41)
            .WithArguments("Entities.EntityBuilder.Build()");

        await VerifyCS.ValidateSourceGeneratorAsync(
            [code],
            [_attributeGeneratedCode, generatedCode],
            [expectedDiagnostic]);
    }
}
