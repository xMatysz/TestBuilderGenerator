name: CI

on:
  push:
    branches: [ master ]

permissions:
  contents: write

jobs:
  Generate_Version:
    runs-on: ubuntu-latest
    outputs:
      build_version: ${{ steps.version_step.outputs.majorMinorPatch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.11
        with:
          versionSpec: '6.0.x'

      - name: Determine Version
        id: version_step # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v3.1.11
        with:
          useConfigFile: true

      - name: Create tag
        run: |
          git tag ${{ steps.version_step.outputs.majorMinorPatch }}
          git push origin ${{ steps.version_step.outputs.majorMinorPatch }}

  Build:
    needs: Generate_Version
    runs-on: ubuntu-latest
    name: "Build ${{needs.Generate_Version.outputs.build_version}}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .Net
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore ./src/TestBuilderGenerator.sln

      - name: Build
        run: dotnet build ./src/TestBuilderGenerator.sln --no-restore -c Release /p:Version=${{needs.Generate_Version.outputs.build_version}}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4.5.0
        with:
          name: "${{ needs.Generate_Version.outputs.build_version }}-artifacts"
          path: "./src/TestBuilderGenerator/nupkg/"
          if-no-files-found: error
          retention-days: 1
          overwrite: true
