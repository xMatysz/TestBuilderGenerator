name: CI

on:
  push:
    branches: [master]

jobs:
  Generate_Version:
    runs-on: ubuntu-latest
    outputs:
      build_version: ${{ steps.generate_step.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .Net
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Generate version
        id: generate_step
        run: |
          cd src
          dotnet tool restore
          echo "version=$(dotnet tool run dotnet-gitversion /updateprojectfiles | jq -r .'FullSemVer')" >> $GITHUB_OUTPUT

  Build:
    needs: Generate_Version
    runs-on: ubuntu-latest
    name: "Build ${{needs.Generate_Version.outputs.build_version}}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .Net
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore ./src/TestBuilderGenerator.sln

      - name: Build
        run: dotnet build ./src/TestBuilderGenerator.sln --no-restore -c Release /p:Version=${{needs.Generate_Version.outputs.build_version}}
        
      - name: Upload Artifact
        uses: actions/upload-artifact@v4.5.0
        with:
          name: "${{ needs.Generate_Version.outputs.build_version }}-artifacts"
          path: "./src/TestBuilderGenerator/nupkg/"
          if-no-files-found: error
          retention-days: 1
          overwrite: true
      
      - name: Generate output
        run: echo "version=${{ needs.Generate_Version.outputs.build_version }}" >> $GITHUB_OUTPUT
        
  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    name: Publish ${{needs.Generate_Version.outputs.build_version}} nuget version
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: "${{ needs.Build.outputs.build_version }}-artifacts"

      - name: Push to nuget org
        run: dotnet nuget push TestBuilderGenerator.${{ needs.Build.outputs.build_version }}.nupkg --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
